include:
  - remote: "${CI_SERVER_URL}/-/snippets/79/raw/main/gitlab-zephyr-ci.yml"

build-bmc:
  extends: .west
  script: |
    west build --sysbuild -p -b tt_blackhole/tt_blackhole/bmc ../modules/tt-zephyr-platforms/app/bmc
  tags:
  - syseng-core-8

build-smc:
  extends: .west
  script: |
    west build -p -b tt_blackhole/tt_blackhole/smc ../modules/tt-zephyr-platforms/app/smc
  tags:
  - syseng-core-8

run-tests-in-qemu:
  extends: .twister
  script: |
    twister -i --retry-failed=3 \
      -T ../modules/tt-zephyr-platforms/tests/ \
      -T ../modules/tt-zephyr-platforms/samples/
  tags:
    - syseng-core-8

run-bmc-tests:
  extends: .twister
  variables:
    # below, BOARD refers to a directory name which cannot contain the '/' character (weird quirk of HWMv2 naming and output directories)
    BOARD: 'tt_blackhole_tt_blackhole_bmc'
    AFTER_SCRIPT: "${WEST_WORKSPACE}/modules/tt-zephyr-platforms/scripts/restore-stable-bmfw.sh"
  script: |
    # This needs to be added to the gitlab runner
    export PATH=$PATH:/opt/SEGGER/JLink/

    # The '-q' argument to west (which '--device-serial-pty rtt' depends on) was only added to west
    # as of v1.3.0, v1.2.0 does not have it, so we need to update west here.
    pip install west -U &>/dev/null

    # Ensure that scrappy can
    # 1. build, flash & run the hello world app
    # 2. perform a full bootloader + fw flash
    # 3. perform a fw update via mcuboot
    twister \
      -i \
      --retry-failed 3 \
      -p tt_blackhole/tt_blackhole_bmc \
      --device-testing --west-flash --flash-before --west-runner jlink \
      --device-serial-pty rtt \
      -s samples/hello_world/sample.basic.helloworld.rtt \
      -s tests/boot/test_mcuboot/bootloader.mcuboot.rtt
  tags:
    - cf-syseng-scrappy

# Build and run existing testsuites using Python and pytest
#
# In these cases, we are testing that drivers and hardware behave in a manner
# consistent with our model. In this case, we are testing that our application
# and drivers behave the same way as they did in the virtual platform.
#
# These tests are slower. They require implementing a "west runner" for the
# hardware platform. I.e. devising a way in python for west and twister to
# flash and run tests on the hardware platform, capturing output to a file.
